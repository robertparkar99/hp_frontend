@import "tailwindcss";

/* ---break---  */
@custom-variant dark (&:is(.dark *));

:root {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: rgba(30, 64, 175, 1);
  --primary-foreground: oklch(0.985 0 0);
  --success: rgba(16, 185, 129, 1);
  --success-foreground: oklch(0.145 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

body {
  color: black;
  background-color: #eaf7ff;
  font-family: sans-serif;
}

.loginRightImage {
  position: fixed;
  left: 34%;
  height: 950px;
}
.text-success {
  color: rgba(16, 185, 129, 1);
}
.text-warning
{
  color :#f59e0b;
}
.text-danger{
  color:red;
}
.bg-success{
  background : rgba(16, 185, 129, 1);
}

.bg-warning{
  background : #f59e0b;
}
/* added on 11-04-2025 by uma  */
.contentDiv {
  display: flex;
}

.mainDiv {
  width: 100%;
}

.historyDiv {
  width: 17%;
}

.historySection {
  margin: 1rem 0rem;
}

.hiddenMenu {
  margin-top: 4px;
}

.leftaside {
  position: absolute;
  top: 0;
  width: 17%;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

.fade-in {
  animation: fadeIn 1s ease-in-out;
}

.hide-scroll {
  -ms-overflow-style: none;
  /* IE and Edge */
  scrollbar-width: none;
}

.dashboardCard {
  height: calc(80vh - 20px);
}

.custom-oklch-gradient {
  background-image: linear-gradient(to right,
      oklch(83.571% 0.08421 300.858),
      #bfdbfe);
  /* Using oklch for from and a common blue-200 hex for to */
}

@media screen and (max-width: 660px) {
  body {
    margin: 0;
    padding: 0;
  }

  .contentDiv {
    display: block;
    flex-direction: column;
    width: 100%;
  }

  .mainDiv,
  .historyDiv {
    width: 100%;
  }
}

#chart-container {
  position: relative;
  width: 220px;
  height: 220px;
  margin: auto;
}

#chart-center-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-weight: bold;
  font-size: 1.25rem;
  pointer-events: none;
}

/* [data-title]:hover:after,
[data-titleHead]:hover:after,
[data-small]:hover:after {
  opacity: 1;
  transition: all 0.1s ease 0.5s;
  visibility: visible;
}
[data-title]:after,
[data-titleHead]:after,
[data-small]:after {
  background-color: #e2fafc;
  color: black;
  font-size: 12px;
  position: absolute;
  padding: 1px 5px 2px 5px;
  z-index: 1000;
  box-shadow: 3px 5px 3px #c0dbf3;
  opacity: 1;
  border: 0.8px solid #749bc2;
  border-radius: 9px;
  visibility: hidden;
  width: max-content;
  white-space: normal;
  word-wrap: break-word;
}


[data-title]:after {
  content: attr(data-title);
  top: 160%;
  left: 100%;
  transform: translateY(-50%);
  max-width: 300px;
}

[data-titleHead]:after {
  content: attr(data-titleHead);
  top: 160%;
  right: 0;
  transform: translateY(-50%);
  max-width: 300px;
}

[data-small]:after {
  content: attr(data-small);
  right: 0;
  transform: translate(0%, 18%);
  max-width: 200px;
}

[data-title],
[data-titleHead],
[data-small] {
  position: relative;
} */


/* Common styles for all tooltip pseudo-elements */
[data-title]:after,
[data-titleHead]:after,
[data-small]:after,
[data-titleBubble]:after {
  background-color: #fff;
  color: black;
  font-size: 12px;
  position: absolute;
  /* Essential for positioning relative to the parent */
  padding: 1px 5px 2px 5px;
  z-index: 1000;
  /* Ensure tooltip appears above other content */
  box-shadow: 3px 5px 3px #c0dbf3;
  border: 0.8px solid #749bc2;
  border-radius: 9px;
  opacity: 0;
  /* Hidden by default */
  visibility: hidden;
  /* Hidden by default */
  width: max-content;
  /* Auto-adjust width to content */
  white-space: normal;
  /* Allow text to wrap */
  word-wrap: break-word;
  /* Break long words */
  transition: opacity 0.1s ease 0.5s, visibility 0.1s ease 0.5s;
  /* Transition for hover effect */
}

/* Hover effect for all tooltips */
[data-title]:hover:after,
[data-titleHead]:hover:after,
[data-small]:hover:after,
[data-titleBubble]:hover:after {
  opacity: 1;
  visibility: visible;
  /* Transition properties are now moved to the common rule above for smoother effect */
}

/* Positioning for the base elements (important for relative positioning of :after) */
[data-title],
[data-titleHead],
[data-small],
[data-titleBubble] {
  position: relative;
  /* Tooltip position relative to this element */
}

[data-titleBubble]:after {
  content: attr(data-title);
  top: calc(100% + 5px);
  /* Position slightly below the element */
  left: 0%;
  /* Align to the left of the element */
  /* Center text within the tooltip */
  /* No transform needed if left: 0 and top: calc(100% + 5px) */
  max-width: 300px;
  /* Maximum width before wrapping */
}

/* Specific positioning and content for data-title */
[data-title]:after {
  content: attr(data-title);
  top: calc(100% + 5px);
  /* Position slightly below the element */
  left: 0%;
  /* Align to the left of the element */
  /* No transform needed if left: 0 and top: calc(100% + 5px) */
  max-width: 300px;
  /* Maximum width before wrapping */
}

/* Specific positioning and content for data-titleHead */
[data-titleHead]:after {
  content: attr(data-titleHead);
  top: calc(100% + 5px);
  /* Position slightly below the element */
  right: 0;
  /* Align to the right of the element */
  /* No transform needed if right: 0 and top: calc(100% + 5px) */
  max-width: 300px;
  /* Maximum width before wrapping */
}

/* Specific positioning and content for data-small */
[data-small]:after {
  content: attr(data-small);
  top: calc(100% + 5px);
  /* Position slightly below the element */
  right: 0;
  /* Align to the right of the element */
  max-width: 200px;
  /* Maximum width before wrapping */
}

[data-title2]:after {
  content: attr(data-title2);
  position: absolute;
  top: calc(100% + 8px);
  left: 50%;
  transform: translateX(-50%);
  color: black;
  font-size: 12px;
  padding: 4px 8px;
  border-radius: 8px;
  border: 0.8px solid #749bc2;
  box-shadow: 3px 5px 3px #c0dbf3;
  white-space: normal;
  max-width: 500px;
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.1s ease 0.5s, visibility 0.1s ease 0.5s;
}

[data-title2]:hover:after {
  opacity: 1;
  background-color: #fff;
  z-index: 1000 !important;
  visibility: visible;
}

[data-title2] {
  position: center;
}

@keyframes shine {
  0% {
    background-position: -200%;
  }

  100% {
    background-position: 200%;
  }
}

.glass-shine {
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
}

.glass-shine::after {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(to right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.3) 50%,
      rgba(255, 255, 255, 0) 100%);
  transform: skewX(-25deg);
  animation: glass-shimmer 3s infinite;
}

.glass-shines {
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  animation: glass-shimmer 3s infinite;
}

@keyframes glass-shimmer {
  0% {
    left: -100%;
    opacity: 0.6;
  }

  50% {
    opacity: 0.9;
  }

  100% {
    left: 150%;
    opacity: 0.6;
  }
}

.rotateDiv {
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  animation: rotateDiv 3s ease-out;
}

@keyframes rotateDiv {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.honeycomb-container {
  display: grid;
  grid-template-columns: repeat(6, 0fr);
  gap: 10px;
  justify-items: center;
}
.honeycomb-container-skill {
  display: grid;
  grid-template-columns: repeat(4, 0fr);
  gap: 10px;
  justify-items: center;
}
/* Stagger every even column */
.honeycomb-container>div:nth-child(6n + 2),
.honeycomb-container>div:nth-child(6n + 4),
.honeycomb-container>div:nth-child(6n + 6),
.honeycomb-container>div:nth-child(6n + 8),
.honeycomb-container>div:nth-child(6n + 10) {
  transform: translateY(60%);
}

.honeycomb-container-skill>div:nth-child(4n + 2),
.honeycomb-container-skill>div:nth-child(4n + 4),
.honeycomb-container-skill>div:nth-child(4n + 6),
.honeycomb-container-skill>div:nth-child(4n + 8),
.honeycomb-container-skill>div:nth-child(4n + 10) {
  transform: translateY(60%);
}
.hexagon-wrapper {
  position: relative;
  width: 154px;
  height: 154px;
  margin-bottom: 20px;
  filter: drop-shadow(0px 0px 12px #b1b1b1);
}
.hexagon-wrapper-skill {
  position: relative;
  width: 154px;
  height: 154px;
  margin-bottom: 20px;
  filter: drop-shadow(0px 0px 12px #b1b1b1);
}

.hexagon-inner {
  --r: 0.1;
  --a: 60deg;
  background-color: #007be5;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
  width: 200px;
  aspect-ratio: 1;
  --_a: (40deg * var(--r));
  --_r: (50% * cos(30deg) / cos((30deg * (1 - var(--r)))));
  cursor: pointer;
  transition: --r 0.5s, --a 0.5s;

  clip-path: shape(from calc(50% + var(--_r) * cos(var(--a) - var(--_a))) calc(50% + var(--_r) * sin(var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(var(--a) + var(--_a))) calc(50% + var(--_r) * sin(var(--a) + var(--_a))) with calc(50% + 50% * cos(var(--a))) calc(50% + 50% * sin(var(--a))),
      line to calc(50% + var(--_r) * cos(60deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(60deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(60deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(60deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(60deg + var(--a))) calc(50% + 50% * sin(60deg + var(--a))),
      line to calc(50% + var(--_r) * cos(120deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(120deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(120deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(120deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(120deg + var(--a))) calc(50% + 50% * sin(120deg + var(--a))),
      line to calc(50% + var(--_r) * cos(180deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(180deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(180deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(180deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(180deg + var(--a))) calc(50% + 50% * sin(180deg + var(--a))),
      line to calc(50% + var(--_r) * cos(240deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(240deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(240deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(240deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(240deg + var(--a))) calc(50% + 50% * sin(240deg + var(--a))),
      line to calc(50% + var(--_r) * cos(300deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(300deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(300deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(300deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(300deg + var(--a))) calc(50% + 50% * sin(300deg + var(--a))));
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}
.scrollbar-hide {
  -ms-overflow-style: none;  /* IE & Edge */
  scrollbar-width: none;     /* Firefox */
}
.hexagon-inner-skill {
  --r: 0.1;
  --a: 60deg;
  background-color: #007be5;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
  width: 200px;
  aspect-ratio: 1;
  --_a: (40deg * var(--r));
  --_r: (50% * cos(30deg) / cos((30deg * (1 - var(--r)))));
  cursor: pointer;
  transition: --r 0.5s, --a 0.5s;

  clip-path: shape(from calc(50% + var(--_r) * cos(var(--a) - var(--_a))) calc(50% + var(--_r) * sin(var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(var(--a) + var(--_a))) calc(50% + var(--_r) * sin(var(--a) + var(--_a))) with calc(50% + 50% * cos(var(--a))) calc(50% + 50% * sin(var(--a))),
      line to calc(50% + var(--_r) * cos(60deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(60deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(60deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(60deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(60deg + var(--a))) calc(50% + 50% * sin(60deg + var(--a))),
      line to calc(50% + var(--_r) * cos(120deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(120deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(120deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(120deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(120deg + var(--a))) calc(50% + 50% * sin(120deg + var(--a))),
      line to calc(50% + var(--_r) * cos(180deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(180deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(180deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(180deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(180deg + var(--a))) calc(50% + 50% * sin(180deg + var(--a))),
      line to calc(50% + var(--_r) * cos(240deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(240deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(240deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(240deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(240deg + var(--a))) calc(50% + 50% * sin(240deg + var(--a))),
      line to calc(50% + var(--_r) * cos(300deg + var(--a) - var(--_a))) calc(50% + var(--_r) * sin(300deg + var(--a) - var(--_a))),
      curve to calc(50% + var(--_r) * cos(300deg + var(--a) + var(--_a))) calc(50% + var(--_r) * sin(300deg + var(--a) + var(--_a))) with calc(50% + 50% * cos(300deg + var(--a))) calc(50% + 50% * sin(300deg + var(--a))));
}

.hexagon-content {
  transform: rotate(0deg);
  /* Counter-rotate the content */
  margin-top: 15px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  color: white;
}

.hexagon-content-skill {
  transform: rotate(0deg);
  /* Counter-rotate the content */
  position: relative;
  margin-top: 15px;
  flex-direction: column; /* ✅ stack title and delete button */
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  color: white;
}

.hexagon-icon {
  font-size: 1.2rem;
  position: relative;
  transform: translate(40px, -28px);
}

.hexagon-title {
  width: 70%;
  text-align: center;
  font-size: 0.8rem;
}

.hexagon-title-skill {
  width: 70%;
  text-align: center;
  font-size: 0.8rem;
}

.hexagon-level {
  font-size: 0.8rem;
  opacity: 0.8;
  transform: translate(0px, 20px);
}

/* ---break---  */

@theme inline {
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

/* ---break---  */

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

/* ---break---  */

@layer base {
  * {
    @apply border-border outline-ring/50;
  }

  body {
    @apply bg-background text-foreground;
  }
}

.hide-scrollbar {
  scrollbar-width: none;
  /* Firefox */
  -ms-overflow-style: none;
  /* IE 10+ */
}

.hide-scrollbar::-webkit-scrollbar {
  display: none;
  /* Chrome, Safari */
}

.hexagon-hover {
  transform: scale(1.05);
  transition: all 0.3s ease;
  filter: drop-shadow(0 0 8px rgba(0, 123, 229, 0.3));
}

.hexagon-wrapper {
  transition: all 0.3s ease;
}

@font-face {
  font-family: 'Inter';
  src: url('/fonts/Inter_28pt-Bold.woff') format('woff');
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'InterSemiBold';
  src: url('/fonts/Inter_28pt-SemiBold.woff') format('woff');
  font-weight: semibold;
  font-style: normal;
}

@font-face {
  font-family: 'InterMedium';
  src: url('/fonts/Inter_18pt-Medium.woff') format('woff');
  font-weight: medium;
  font-style: normal;
}

@font-face {
  font-family: 'InterRegular';
  src: url('/fonts/Inter_18pt-Regular.woff') format('woff');
  font-style: normal;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

